@mixin aspect-ratio($width, $height) {

    &:before {
        content: '';
        display: block;
        width: 100%;
        padding-top: ($height / $width) * 100%;
    }

    & > .aspect-content {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }
}

@mixin respond-to($name, $bp: $breakpoints) {
    $max: breakpoint-max($name, $bp);

    @if $max {
        @media (max-width: $max) {
            @content;
        }
    }

    @else {
        @content;
    }
}

@mixin font($alias, $name, $weight) {
    @font-face {
        font-family: $alias;
        src: url('~assets/fonts/' + $name + '.woff') format('woff');
        font-weight: $weight;
        font-style: normal;
        font-display: swap;
    }
}

@function breakpoint-max($name, $bp: $breakpoints) {
    $next: breakpoint-next($name, $bp);

    @return if($next, breakpoint-min($next, $bp) - .02, null);
}

@function breakpoint-min($name, $bp: $breakpoints) {
    $min: map-get($bp, $name);

    @return if($min != 0, $min, null);
}

@function breakpoint-next($name, $bp: $breakpoints, $breakpoint-names: map-keys($bp)) {
    $n: index($breakpoint-names, $name);

    @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);
}

@function breakpoint-infix($name, $bp: $breakpoints) {
    @return if(breakpoint-min($name, $bp) == null, "", "-#{$name}");
}
